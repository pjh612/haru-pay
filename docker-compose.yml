services:
  mysql:
    image: mysql:8.0
    networks:
      - haru_network
    env_file: .env
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - ./mysql:/var/lib/mysql
  connect:
    image: quay.io/debezium/connect
    links:
      - kafka-1:kafka-1
      - kafka-2:kafka-2
      - kafka-3:kafka-3
      - mysql:mysql
    ports:
      - "8075:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - haru_network
  kafka-1:
    container_name: kafka-1
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
    volumes:
      - ./data/${KAFKA_DIR}/kafka-1:/var/lib/kafka/data
    networks:
      - haru_network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:29092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENERS: INTERNAL://:29092,CONTROLLER://:29094,EXTERNAL://0.0.0.0:9092
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:29094,2@kafka-2:29094,3@kafka-3:29094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      CLUSTER_ID: ${KAFKA_CLUSTER_ID:-MkU3OEVBNTcwNTJENDM2Qk}
  kafka-2:
    container_name: kafka-2
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9095:9095"
    volumes:
      - ./data/${KAFKA_DIR}/kafka-2:/var/lib/kafka/data
    networks:
      - haru_network
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:29092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9095
      KAFKA_LISTENERS: INTERNAL://:29092,CONTROLLER://:29094,EXTERNAL://0.0.0.0:9095
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:29094,2@kafka-2:29094,3@kafka-3:29094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      CLUSTER_ID: ${KAFKA_CLUSTER_ID:-MkU3OEVBNTcwNTJENDM2Qk}
  kafka-3:
    container_name: kafka-3
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9096:9096"
    volumes:
      - ./data/${KAFKA_DIR}/kafka-3:/var/lib/kafka/data
    networks:
      - haru_network
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:29092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9096
      KAFKA_LISTENERS: INTERNAL://:29092,CONTROLLER://:29094,EXTERNAL://0.0.0.0:9096
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:29094,2@kafka-2:29094,3@kafka-3:29094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      CLUSTER_ID: ${KAFKA_CLUSTER_ID:-MkU3OEVBNTcwNTJENDM2Qk}
#  kafka:
#    image: 'docker.io/bitnami/kafka:3.5'
#    networks:
#      - haru_network
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=broker,controller
#
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
#    depends_on:
#      - zookeeper
  redis:
    image: redis:latest
    networks:
      - haru_network
    ports:
      - 6379:6379
    restart: always
  kafka-ui:
    image: provectuslabs/kafka-ui
    networks:
      - haru_network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:29092,kafka-3:29092
  auth:
    image: haru-auth:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8072:8072"
    depends_on:
      - mysql
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  payments:
    image: haru-payments:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8071:8071"
    depends_on:
      - mysql
      - kafka-1
      - kafka-2
      - kafka-3
      - auth
      - redis
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  money:
    image: haru-money:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8073:8073"
    depends_on:
      - mysql
      - kafka-1
      - kafka-2
      - kafka-3
      - auth
      - redis
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  orchestrator:
    image: haru-orchestrator:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8077:8077"
    depends_on:
      - mysql
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  user-api:
    image: haru-user-api:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8070:8070"
    depends_on:
      - mysql
      - auth
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  banking:
    image: haru-banking:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8074:8074"
    depends_on:
      - mysql
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - haru_network
    depends_on:
      - elasticsearch
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - haru_network
    restart: unless-stopped
  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - haru_network
    depends_on:
      - elasticsearch
    restart: unless-stopped
  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - haru_network
    depends_on:
      - elasticsearch
    restart: unless-stopped
networks:
  haru_network:
    driver: bridge
volumes:
  elasticsearch: