services:
  zookeeper:
    image: 'arm64v8/zookeeper:3.8'
    networks:
      - haru_network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none
  mysql:
    image: mysql:8.0
    networks:
      - haru_network
    env_file: .env
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
  connect:
    image: quay.io/debezium/connect
    platform: linux/x86_64
    links:
      - kafka:kafka
      - mysql:mysql
    ports:
      - "8075:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - haru_network
  kafka:
    image: 'docker.io/bitnami/kafka:3.5'
    networks:
      - haru_network
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
    depends_on:
      - zookeeper
  redis:
    image: redis:latest
    networks:
      - haru_network
    ports:
      - 6379:6379
    platform: linux/x86_64
    restart: always
  kafka-ui:
    image: provectuslabs/kafka-ui
    networks:
      - haru_network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  auth:
    image: haru-auth:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8072:8072"
    depends_on:
      - mysql
      - kafka
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  payments:
    image: haru-payments:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8071:8071"
    depends_on:
      - mysql
      - kafka
      - auth
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  money:
    image: haru-money:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8073:8073"
    depends_on:
      - mysql
      - kafka
      - auth
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  orchestrator:
    image: haru-orchestrator:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8077:8077"
    depends_on:
      - mysql
      - kafka
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  user-api:
    image: haru-user-api:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8070:8070"
    depends_on:
      - mysql
      - kafka
      - auth
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  banking:
    image: haru-banking:0.0.1-SNAPSHOT
    networks:
      - haru_network
    ports:
      - "8074:8074"
    depends_on:
      - mysql
      - kafka
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"

networks:
  haru_network:
    driver: bridge